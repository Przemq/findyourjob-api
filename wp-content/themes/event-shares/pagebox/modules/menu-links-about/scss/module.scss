@import "module-variables";

// Overall module styles
@include overall_module() {
  @include transition(300ms all);
  .sub-menu-flex {
    top: 105px;
    @include media-breakpoint-down(md) {
      display: none;
    }
    &:before {
      content: '';
      display: block;
      width: 100%;
      height: 33px;
      position: absolute;
      top: -33px;
      left: 0;
    }
  }
  .sub-menu-mobile-flex {
    display: none;
    padding-left: 0;
    li {
      h4 {
        padding-left: 40px;

      }
    }
    @include media-breakpoint-down(md) {
      position: relative;
    }
  }
  &.sub-on {
    .sub-menu-mobile-flex {
      @include media-breakpoint-down(md) {
        display: block;
      }

      h4 a {
        font-size: 14px;
      }
    }
    &.current-menu-item, .current-menu-item, &.current-menu-item-parent {
      h4 {
        margin: 0;
        position: relative;
      }
      li.current-menu-item {
        h4 {
          position: relative;
          background: #d6d6d6;
          a {
            font-weight: bold;
            &:after {
              content: '';
              display: block;
              position: absolute;
              right: 15px;
              top: 50%;
              @include transform(translateY(-50%));
              width: 10px;
              height: 15px;
              background: url($template-url + '/assets/images/blue-right-chevron-mobile.svg') no-repeat;
            }
          }

        }
      }

    }
  }
}

// Styles for unique page/post module.
// In this scope you can use special functions to get data from pageboxes:
// - get( key )
// - get_deep( keys... )
@include specified_module_loop() {
  //background-color: get('color');
  .sub-menu-flex {
    background-color: rgba(get('background'), get('backgroundOpacity'));
    @if (get('isImage') == 1) {
      background-size: cover;
      background-repeat: no-repeat;
      background-position: center;
    }
    li {
      .menu-special-hover {
        h4 {
          font-size: get('boxTitleSize');
          color: get('boxTitleColor');
        }
        p {
          font-size: get('boxDescriptionSize');
          color: get('boxDescriptionColor');
        }
        a {
          font-size: get('boxDescriptionSize');
          color: get('boxButtonColor');
          padding-left: 0;
          &:hover {
            color: get('boxButtonColorHover');
          }
        }
      }

    }
  }

  &.sub-on {
    .sub-menu-mobile-flex {

    }
  }

}